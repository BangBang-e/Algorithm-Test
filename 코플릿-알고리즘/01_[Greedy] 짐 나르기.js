//? 01_[Greedy] 짐 나르기
//TODO <문제 설명>
//TODO 김코딩과 박해커는 사무실 이사를 위해 짐을 미리 싸 둔 뒤, 짐을 넣을 박스를 사왔다.
//TODO 박스를 사오고 보니 각 이사짐의 무게는 들쭉날쭉한 반면,
//TODO 박스는 너무 작아서 한번에 최대 2개의 짐 밖에 넣을 수 없었고 무게 제한도 있었다.
//TODO 예를 들어, 짐의 무게가 [70kg, 50kg, 80kg, 50kg]이고 박스의 무게 제한이 100kg이라면
//TODO 2번째 짐과 4번째 짐은 같이 넣을 수 있지만 1번째 짐과 3번째 짐의 무게의 합은 150kg이므로
//TODO 박스의 무게 제한을 초과하여 같이 넣을 수 없다.
//TODO 박스를 최대한 적게 사용하여 모든 짐을 옮기려고 합니다.
//TODO 짐의 무게를 담은 배열 stuff와 박스의 무게 제한 limit가 매개변수로 주어질 때,
//TODO 모든 짐을 옮기기 위해 필요한 박스 개수의 최소값을 return 하도록 movingStuff 함수를 작성하세요.

//! <제한 사항>
//! stuff=> Number 타입의 40 이상 240 이하의 자연수를 담은 배열
//! limited=> Number 타입의 40 이상 240 이하의 자연수
//! 출력=> Number 타입을 리턴해야 합니다.
//! 모든 짐을 옮기기 위해 필요한 박스 개수의 최솟값을 숫자로 반환합니다.
//! 옮겨야 할 짐의 개수는 1개 이상 50,000개 이하입니다.
//! 박스의 무게 제한은 항상 짐의 무게 중 최대값보다 크게 주어지므로 짐을 나르지 못하는 경우는 없습니다.

//* <입출력 예>
//* stuff=>                 limit=>     result=>
//* [70, 50, 80, 50]        100         3
//* [60, 80, 120, 90, 130]  140         4

//::::

function movingStuff(stuff, limit) {
    let box = 0;
    let sorted = stuff.sort((a, b) => a - b);
    let left = 0;
    let right = sorted.length - 1;
    while (left <= right) {
        if (stuff[left] + stuff[right] <= limit) {
            left++;
            right--;
            box++;
        } else {
            right--;
            box++;
        }
    }
    return box;
}
console.log(movingStuff([70, 50, 80, 50], 100)); // 3
console.log(movingStuff([60, 80, 120, 90, 130], 140)); // 4

//-------------------------------------------------------------------------------------------