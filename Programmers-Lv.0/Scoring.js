//? [등수 매기기]
//TODO <문제 설명>
//TODO 영어 점수와 수학 점수의 평균 점수를 기준으로 학생들의 등수를 매기려고 합니다.
//TODO 영어 점수와 수학 점수를 담은 2차원 정수 배열 score가 주어질 때,
//TODO 영어 점수와 수학 점수의 평균을 기준으로 매긴 등수를 담은 배열을 return하도록 solution 함수를 완성해주세요.

//! <제한 사항>
//! 0 ≤ score[0], score[1] ≤ 100
//! 1 ≤ score의 길이 ≤ 10
//! score의 원소 길이는 2입니다.
//! score는 중복된 원소를 갖지 않습니다.

//* <입출력 예>	
//* score=[[80, 70], [90, 50], [40, 70], [50, 80]]
//* result=[1, 2, 4, 3]

//* score=[[80, 70], [70, 80], [30, 50], [90, 100], [100, 90], [100, 100], [10, 30]]
//* result=[4, 4, 6, 2, 2, 1, 7]

//::::

function solution(score) {
    let avg = score.map(([영어, 수학]) => (영어 + 수학) / 2); // avg === 중첩배열 속 점수를 평균점수로 바꾼 배열
    return avg.map(el=>{ // 평균 점수 배열의 각 요소를 map()
        return avg.filter(x=>x>el).length +1 // 나보다 큰 점수만 남은 배열의 length + 1 === 공동 점수 구하는 방법
    })
}
console.log(solution([[80, 70], [90, 50], [40, 70], [50, 80]])); // [1, 2, 4, 3]
console.log(solution([[80, 70], [70, 80], [30, 50], [90, 100], [100, 90], [100, 100], [10, 30]])); // [4, 4, 6, 2, 2, 1, 7]

//-------------------------------------------------------------------------------------------

function solution2(score) {
    let avg = score.map(([영어, 수학]) => (영어 + 수학) / 2); // avg === 중첩배열 속 점수를 평균점수로 바꾼 배열
    let sorted = avg.slice().sort((a, b)=>(b - a)) // 평균점수 배열을 내림차순으로 정리해서 새로운 변수에 할당 -> 원본 avg는 그대로 살아있음
    return avg.map(x=>sorted.indexOf(x)+1) // sorted의 인덱스 숫자 + 1 === 공동 점수 구하는 방법
}
console.log(solution2([[80, 70], [90, 50], [40, 70], [50, 80]])); // [1, 2, 4, 3]
console.log(solution2([[80, 70], [70, 80], [30, 50], [90, 100], [100, 90], [100, 100], [10, 30]])); // [4, 4, 6, 2, 2, 1, 7]