//? [bubbleSort] Daily Coding_no.23
//TODO <문제 설명>
//TODO 정수를 요소로 갖는 배열을 입력받아 오름차순으로 정렬하여 리턴해야 합니다.
//TODO 버블 정렬(bubble sort)은 여러 정렬 알고리즘(삽입 정렬, 퀵 정렬, 병합 정렬, 기수 정렬 등) 중 가장 기본적인 알고리즘입니다.

//? <버블 정렬 알고리즘은 아래와 같습니다.>
//TODO 1. 첫 번째 요소가 두 번째 요소보다 크면, 두 요소의 위치를 바꿉니다. (swap)
//TODO 2. 두 번째 요소와 세 번째 요소보다 크면, 두 요소의 위치를 바꿉니다. (swap)
//TODO 3. 1, 2를 마지막까지 반복합니다. (마지막에서 두 번째 요소와 마지막 요소를 비교)
//TODO 4. 1~3의 과정을 한 번 거치게 되면, 가장 큰 요소가 배열의 마지막으로 밀려납니다.
//TODO 5. 1~3의 과정을 첫 요소부터 다시 반복합니다.
//TODO 6. 5를 통해 두 번째로 큰 요소가 배열의 마지막 바로 두 번째로 밀려납니다.
//TODO 7. 1~3의 과정을 총 n번(배열의 크기) 반복합니다.
//TODO 이 모습이 마치 '거품이 밀려 올라가는 것과 같은 모습'과 같아서 bubble sort라고 부릅니다.

//! <제한 사항>
//! number 타입을 요소로 갖는 배열
//! arr[i]는 정수
//! arr[i]의 길이는 1,000 이하
//! number 타입을 요소로 갖는 배열을 리턴해야 합니다.
//! 배열의 요소는 오름차순으로 정렬되어야 합니다.
//! 위에서 설명한 알고리즘을 구현해야 합니다.
//! arr.sort 사용은 금지됩니다.
//! 입력으로 주어진 배열은 중첩되지 않은 1차원 배열입니다.

//* <입출력 예>
//* arr=[2, 1, 3]                   result=[1, 2, 3]
//* arr=[1, 2, 43, 100, 100, 21]    result=[1, 2, 21, 43, 100, 100]
//* arr=[20, -10, -11, 2, 4, 299]   result=[-11, -10, 2, 4, 20, 299]


//::::

const bubbleSort = function (arr) {
    for (let i = 0; i < arr.length - 1; i++) {
        let count = 0;
        for (let j = 0; j < arr.length - 1 - i; j++) {
            if (arr[j] > arr[j + 1]) {
                [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];
                count++;
            }
        }
        if (count === 0) break;
    }
    return arr;
};
console.log(bubbleSort([2, 1, 3])); // [1, 2, 3]
console.log(bubbleSort([1, 2, 43, 100, 100, 21])); // [1, 2, 21, 43, 100, 100]
console.log(bubbleSort([20, -10, -11, 2, 4, 299])); // [-11, -10, 2, 4, 20, 299]

//-------------------------------------------------------------------------------------------